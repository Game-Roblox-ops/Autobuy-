local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")

-- Your webhook
local url = "https://discord.com/api/webhooks/1381734460894085170/SQ5j5Lqh8xupYpcB7LVaZAOqPiP-BkBqL4b8H86R79g9NfDkc-LkF60bM6ZaayRw2qor"

-- Desired items
local desiredItems = {
    ["Shadow Ring"] = true,
    ["Khao Man Kai"] = true,
    ["Heaven Ring"] = true
}

-- Send message to Discord
local function notifyDiscord(foundItems)
    if #foundItems == 0 then return end

    local list = table.concat(foundItems, ", ")
    local data = {
        ["content"] = "Yo **kaito0_0**, Arena Shop has your items: **" .. list .. "**!"
    }

    local body = HttpService:JSONEncode(data)
    HttpService:PostAsync(url, body, Enum.HttpContentType.ApplicationJson)
end

-- Show Roblox on-screen notification
local function notifyRoblox(foundItems)
    if #foundItems == 0 then return end

    local text = "Arena Shop has your item(s): " .. table.concat(foundItems, ", ")
    StarterGui:SetCore("SendNotification", {
        Title = "Arena Shop Alert!",
        Text = text,
        Duration = 5
    })
end

-- Check Arena Shop stock
local function checkShop()
    local stockAttr = LocalPlayer:GetAttribute("Areana_Stock")
    if not stockAttr then return end

    local success, shopStock = pcall(function()
        return HttpService:JSONDecode(stockAttr)
    end)

    if not success or not shopStock then return end

    local found = {}
    for _, itemData in pairs(shopStock) do
        local itemName = itemData[1]
        if desiredItems[itemName] then
            table.insert(found, itemName)
        end
    end

    if #found > 0 then
        notifyDiscord(found)
        notifyRoblox(found)
        warn("✅ Found desired Arena Shop item(s):", table.concat(found, ", "))
        -- Stop hopping (do nothing)
    else
        warn("❌ No desired items found. Hopping...")
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
end

-- Initial check
checkShop()

-- Re-check whenever shop stock updates
LocalPlayer:GetAttributeChangedSignal("Areana_Stock"):Connect(checkShop)
